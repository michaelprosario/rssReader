@page "/search"
@inject IArticleService ArticleService
@inject IFeedService FeedService
@inject NavigationManager NavigationManager

<PageTitle>RSS Reader - Search Articles</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3>Search Articles</h3>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-10">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search articles..." 
                                       @bind="searchQuery" @bind:event="oninput" @onkeyup="HandleKeyPress" />
                                <select class="form-select" style="max-width: 200px;" @bind="selectedFeedId">
                                    <option value="">All Feeds</option>
                                    @if (feeds != null)
                                    {
                                        @foreach (var feed in feeds)
                                        {
                                            <option value="@feed.Id">@feed.Title</option>
                                        }
                                    }
                                </select>
                                <button class="btn btn-primary" @onclick="SearchArticles">
                                    <i class="oi oi-magnifying-glass"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>

                    @if (isSearching)
                    {
                        <div class="text-center my-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Searching...</span>
                            </div>
                            <p>Searching articles...</p>
                        </div>
                    }
                    else if (string.IsNullOrEmpty(searchQuery))
                    {
                        <div class="alert alert-info">
                            <p>Enter a search query to find articles.</p>
                        </div>
                    }
                    else if (!searchResults.Any())
                    {
                        <div class="alert alert-warning">
                            <p>No articles found matching your search criteria.</p>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            @foreach (var article in searchResults)
                            {
                                <div class="col-md-12 mb-3">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">
                                                <a href="/article/@article.Id" class="article-link @(article.IsRead ? "text-muted" : "")">
                                                    @article.Title
                                                </a>
                                            </h5>
                                            @if (!string.IsNullOrEmpty(article.Summary))
                                            {
                                                <p class="card-text">@((MarkupString)article.Summary)</p>
                                            }
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">
                                                    @if (feedNames.ContainsKey(article.FeedId))
                                                    {
                                                        <span>@feedNames[article.FeedId] â€¢ </span>
                                                    }
                                                    @article.PublishDate.ToString("MMM d, yyyy")
                                                </small>
                                                <div>
                                                    @if (article.IsBookmarked)
                                                    {
                                                        <span class="badge bg-warning text-dark me-2">
                                                            <i class="oi oi-bookmark"></i> Bookmarked
                                                        </span>
                                                    }
                                                    <a href="/article/@article.Id" class="btn btn-sm btn-outline-primary">Read</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string searchQuery = "";
    private string selectedFeedId = "";
    private List<Article> searchResults = new List<Article>();
    private List<Feed> feeds = new List<Feed>();
    private Dictionary<string, string> feedNames = new Dictionary<string, string>();
    private bool isSearching = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeeds();
    }

    private async Task LoadFeeds()
    {
        feeds = await FeedService.GetAllFeedsAsync();
        feedNames = feeds.ToDictionary(f => f.Id, f => f.Title);
    }

    private async Task SearchArticles()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
            return;

        isSearching = true;
        searchResults = await ArticleService.SearchArticlesAsync(searchQuery, selectedFeedId);
        isSearching = false;
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchArticles();
        }
    }
}

@inject IFeedService FeedService
@inject IArticleService ArticleService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">RSS Reader</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-dashboard" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        @if (feeds != null && feeds.Any())
        {
            <div class="nav-section px-3 py-2">
                <span class="nav-section-title">Feeds</span>
                <button class="btn btn-sm btn-outline-light float-end" @onclick="RefreshFeeds" title="Refresh feeds">
                    <span class="oi oi-reload" aria-hidden="true"></span>
                </button>
            </div>
            
            @foreach (var feed in feeds)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"feed/{feed.Id}")">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="feed-title">
                                @(string.IsNullOrEmpty(feed.Title) ? "Untitled Feed" : feed.Title)
                            </div>
                            @if (feed.UnreadCount > 0)
                            {
                                <span class="badge bg-primary rounded-pill">@feed.UnreadCount</span>
                            }
                        </div>
                    </NavLink>
                </div>
            }
        }

        <div class="nav-section px-3 py-2 mt-2">
            <span class="nav-section-title">Browse</span>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bookmarks">
                <span class="oi oi-bookmark" aria-hidden="true"></span> Bookmarks
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tags">
                <span class="oi oi-tag" aria-hidden="true"></span> Tags
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="search">
                <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Search
            </NavLink>
        </div>

        <div class="nav-section px-3 py-2 mt-2">
            <span class="nav-section-title">Manage</span>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="feeds/add">
                <span class="oi oi-plus" aria-hidden="true"></span> Add Feed
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="settings">
                <span class="oi oi-cog" aria-hidden="true"></span> Settings
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private List<Feed> feeds = new List<Feed>();
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeeds();
    }

    private async Task LoadFeeds()
    {
        feeds = await FeedService.GetAllFeedsAsync();
        
        foreach (var feed in feeds)
        {
            feed.UnreadCount = await ArticleService.GetUnreadCountAsync(feed.Id);
        }
    }

    private async Task RefreshFeeds()
    {
        await LoadFeeds();
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
